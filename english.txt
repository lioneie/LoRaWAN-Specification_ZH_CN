1 Introduction
This document describes the LoRaWAN network protocol which is optimized for battery-powered end-devices that may be either mobile or mounted at a fixed location.

LoRaWAN networks typically are laid out in a star-of-stars topology in which gateways relay messages between end-devices and a central Network Server, the Network Server routes the packets from each device of the network to the associated Application Server.To secure radio transmissions the LoRaWAN protocol relies on symmetric cryptography using session keys derived from the device’s root keys. In the backend the storage of the device’s root keys and the associated key derivation operations are insured by a Join Server.

This specification treats the Network Server, Application Server, and Join Server as if they are always co-located. Hosting these functionalities across multiple disjoint network nodes is outside the scope of this specification but is covered by [BACKEND].

Gateways are connected to the Network Server via secured standard IP connections while end-devices use single-hop LoRa or FSK communication to one or many gateways.All communication is generally bi-directional, although uplink communication from an end-device to the Network Server is expected to be the predominant traffic.

Communication between end-devices and gateways is spread out on different frequency channels and data rates. The selection of the data rate is a trade-off between communication range and message duration, communications with different data rates do not interfere with each other. LoRa data rates range from 0.3 kbps to 50 kbps. To maximize both battery life of the end-devices and overall network capacity, the LoRa network infrastructure can manage the data rate and RF output for each end-device individually by means of an adaptive data rate (ADR) scheme.

End-devices may transmit on any channel available at any time, using any available data rate, as long as the following rules are respected:

The end-device changes channel in a pseudo-random fashion for every transmission. The resulting frequency diversity makes the system more robust to interferences.
The end-device respects the maximum transmit duty cycle relative to the sub-band used and local regulations.
The end-device respects the maximum transmit duration (or dwell time) relative to the sub-band used and local regulations.

Note: Maximum transmit duty-cycle and dwell time per sub-band are region specific and are defined in [PHY]

1 Gateways are also known as concentrators or base stations.
2 End-devices are also known as motes.
3 Support for intermediate elements – repeaters – is not described in the document, however payload restrictions for encapsulation overhead are included in this specification. A repeater is defined as using LoRaWAN as its backhaul mechanism.


1.1 LoRaWAN Classes
All LoRaWAN devices MUST implement at least the Class A functionality as described in this document. In addition they MAY implement options named Class B or Class C as also described in this document or others to be defined. In all cases, they MUST remain compatible with Class A.


1.2 Conventions
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119.

MAC commands are written LinkCheckReq, bits and bit fields are written FRMPayload, constants are written RECEIVE_DELAY1, variables are written N.
In this document,
 The over-the-air octet order for all multi-octet fields is little endian
 EUI are 8 bytes multi-octet fields and are transmitted as little endian.
 By default, RFU bits SHALL be set to zero by the transmitter of the message and SHALL be ignored by the receiver


2 Introduction on LoRaWAN options

LoRa is a wireless modulation for long-range low-power low-data-rate applications developed by Semtech. Devices implementing more than Class A are generally named “higher Class end-devices” in this document.


2.1 LoRaWAN Classes
A LoRa network distinguishes between a basic LoRaWAN (named Class A) and optional features (Class B, Class C):

Bi-directional end-devices (Class A): End-devices of Class A allow for bi-directional communications whereby each end-device’s uplink transmission is followed by two short downlink receive windows. The transmission slot scheduled by the end-device is based on its own communication needs with a small variation based on a random time basis (ALOHA-type of protocol). This Class A operation is the lowest power end-device system for applications that only require downlink communication from the server shortly after the end-device has sent an uplink transmission. Downlink communications from the server at any other time will have to wait until the next scheduled uplink.

Bi-directional end-devices with scheduled receive slots (Class B): End-devices of Class B allow for more receive slots. In addition to the Class A random receive windows, Class B devices open extra receive windows at scheduled times. In order for the End-device to open its receive window at the scheduled time, it receives a time synchronized Beacon from the gateway.

Bi-directional end-devices with maximal receive slots (Class C): End-devices of Class C have nearly continuously open receive windows, only closed when transmitting. Class C end-device will use more power to operate than Class A or Class B but they offer the lowest latency for server to end-device communication.


3 Physical Message Formats

The LoRa terminology distinguishes between uplink and downlink messages.
3.1 Uplink Messages
Uplink messages are sent by end-devices to the Network Server relayed by one or many gateways.

Uplink messages use the LoRa radio packet explicit mode in which the LoRa physical header (PHDR) plus a header CRC (PHDR_CRC) are included. The integrity of the payload is protected by a CRC.

The PHDR, PHDR_CRC and payload CRC fields are inserted by the radio transceiver.
Uplink PHY:

3.2 Downlink Messages
Each downlink message is sent by the Network Server to only one end-device and is relayed by a single gateway.

Downlink messages use the radio packet explicit mode in which the LoRa physical header(PHDR) and a header CRC (PHDR_CRC) are included.
Downlink PHY:

1 See the LoRa radio transceiver datasheet for a description of LoRa radio packet implicit/explicit modes.
2 This specification does not describe the transmission of multicast messages from a network server to many end-devices.
3 No payload integrity check is done at this level to keep messages as short as possible with minimum impact on any duty-cycle limitations of the ISM bands used.


3.3 Receive Windows
Following each uplink transmission the end-device MUST open two short receive windows. The receive window start times are defined using the end of the transmission as a reference.

3.3.1 First receive window channel, data rate, and start

The first receive window RX1 uses a frequency that is a function of the uplink frequency and a data rate that is a function of the data rate used for the uplink. RX1 opens RECEIVE_DELAY11 seconds (+/- 20 microseconds) after the end of the uplink modulation. The relationship between uplink and RX1 slot downlink data rate is region specific and detailed in [PHY]. By default, the first receive window datarate is identical to the datarate of the last uplink.

3.3.2 Second receive window channel, data rate, and start

The second receive window RX2 uses a fixed configurable frequency and data rate and opens RECEIVE_DELAY2 seconds (+/- 20 microseconds) after the end of the uplink modulation. The frequency and data rate used can be modified through MAC commands(see Section 5). The default frequency and data rate to use are region specific and detailed in [PHY].

3.3.3 Receive window duration

The length of a receive window MUST be at least the time required by the end-device’s radio transceiver to effectively detect a downlink preamble.

3.3.4 Receiver activity during the receive windows

If a preamble is detected during one of the receive windows, the radio receiver stays active until the downlink frame is demodulated. If a frame was detected and subsequently
demodulated during the first receive window and the frame was intended for this end-device
after address and MIC (message integrity code) checks, the end-device MUST not open the
second receive window.


3.3.5 Network sending a message to an end-device

If the network intends to transmit a downlink to an end-device, it MUST initiate the transmission precisely at the beginning of at least one of the two receive windows. If a downlink is transmitted during both windows, identical frames MUST be transmitted during each window.

3.3.6 Important notice on receive windows
An end-device SHALL NOT transmit another uplink message before it either has received a downlink message in the first or second receive window of the previous transmission, or the second receive window of the previous transmission is expired.

1 RECEIVE_DELAY1 and RECEIVE_DELAY2 are described in Chapter 6

3.3.7 Receiving or transmitting other protocols
The node MAY listen or transmit other protocols or do any radio transactions between the LoRaWAN transmission and reception windows, as long as the end-device remains compatible with the local regulation and compliant with the LoRaWAN specification.




